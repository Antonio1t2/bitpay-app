// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Bottom Notification Modal should render correctly 1`] = `
<Modal
  animationType="none"
  deviceHeight={null}
  deviceWidth={null}
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={true}
  onBackdropPress={[Function]}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  panResponderThreshold={4}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  testID="modalBackdrop"
  transparent={true}
  useNativeDriverForBackdrop={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    forwardedRef={[Function]}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    deviceHeight={null}
    deviceWidth={null}
    forwardedRef={[Function]}
    hideModalContentWhileAnimating={true}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    panResponderThreshold={4}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "flex-end",
        "margin": 0,
        "transform": Array [
          Object {
            "translateY": 1334,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    useNativeDriverForBackdrop={true}
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "white",
            "borderTopLeftRadius": 10,
            "borderTopRightRadius": 10,
            "paddingBottom": 25,
            "paddingLeft": 25,
            "paddingRight": 25,
            "paddingTop": 25,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "marginRight": 10,
              },
            ]
          }
        >
          <svg
            data-file-name="SvgSuccess"
            height={25}
            width={25}
          />
        </View>
        <Text
          style={
            Array [
              Object {
                "fontFamily": "Heebo",
                "fontSize": 20,
                "fontStyle": "normal",
                "fontWeight": "500",
                "letterSpacing": 0,
                "lineHeight": 30,
              },
            ]
          }
        >
          Modal Title
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "marginBottom": 20,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 15,
            },
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "fontFamily": "Heebo",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0.5,
                "lineHeight": 24,
                "textAlign": "left",
              },
            ]
          }
        >
          Modal Message
        </Text>
      </View>
      <View
        style={
          Array [
            Object {
              "borderBottomColor": "#ebebeb",
              "borderBottomWidth": 1,
              "marginBottom": 20,
              "marginLeft": 0,
              "marginRight": 0,
              "marginTop": 20,
            },
          ]
        }
      />
      <View
        platform="android"
        style={
          Array [
            Object {
              "flexDirection": "row",
              "justifyContent": "space-between",
            },
          ]
        }
      >
        <Text
          onPress={[Function]}
          style={
            Array [
              Object {
                "color": "black",
                "fontSize": 16,
                "fontStyle": "normal",
                "fontWeight": "400",
                "letterSpacing": 0.5,
                "lineHeight": 24,
                "textAlign": "left",
              },
            ]
          }
          suppressHighlighting={true}
        >
          CLOSE
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
